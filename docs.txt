
RFC 2131
  Figure 1 gives the format of a DHCP message and table 1 describes
   each of the fields in the DHCP message.  The numbers in parentheses
   indicate the size of each field in octets.  The names for the fields
   given in the figure will be used throughout this document to refer to
   the fields in DHCP messages.

RFC 1533
(alle dhcp opties)
https://datatracker.ietf.org/doc/html/rfc1533


Figure 1
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     op (1)    |   htype (1)   |   hlen (1)    |   hops (1)    |
    +---------------+---------------+---------------+---------------+
    |                            xid (4)                            |
    +-------------------------------+-------------------------------+
    |           secs (2)            |           flags (2)           |
    +-------------------------------+-------------------------------+
    |                          ciaddr  (4)                          |
    +---------------------------------------------------------------+
    |                          yiaddr  (4)                          |
    +---------------------------------------------------------------+
    |                          siaddr  (4)                          |
    +---------------------------------------------------------------+
    |                          giaddr  (4)                          |
    +---------------------------------------------------------------+
    |                                                               |
    |                          chaddr  (16)                         |
    |                                                               |
    |                                                               |
    +---------------------------------------------------------------+
    |                                                               |
    |                          sname   (64)                         |
    +---------------------------------------------------------------+
    |                                                               |
    |                          file    (128)                        |
    +---------------------------------------------------------------+
    |                                                               |
    |                          options (variable)                   |
    +---------------------------------------------------------------+

   FIELD      OCTETS       DESCRIPTION
   -----      ------       -----------

   op            1  Message op code / message type.
                    1 = BOOTREQUEST, 2 = BOOTREPLY
   htype         1  Hardware address type, see ARP section in "Assigned
                    Numbers" RFC; e.g., '1' = 10mb ethernet.
   hlen          1  Hardware address length (e.g.  '6' for 10mb
                    ethernet).
   hops          1  Client sets to zero, optionally used by relay agents
                    when booting via a relay agent.
   xid           4  Transaction ID, a random number chosen by the
                    client, used by the client and server to associate
                    messages and responses between a client and a
                    server.
   secs          2  Filled in by client, seconds elapsed since client
                    began address acquisition or renewal process.
   flags         2  Flags (see figure 2).
   ciaddr        4  Client IP address; only filled in if client is in
                    BOUND, RENEW or REBINDING state and can respond
                    to ARP requests.
   yiaddr        4  'your' (client) IP address.
   siaddr        4  IP address of next server to use in bootstrap;
                    returned in DHCPOFFER, DHCPACK by server.
   giaddr        4  Relay agent IP address, used in booting via a
                    relay agent.
   chaddr       16  Client hardware address.
   sname        64  Optional server host name, null terminated string.
   file        128  Boot file name, null terminated string; "generic"
                    name or null in DHCPDISCOVER, fully qualified
                    directory-path name in DHCPOFFER.
   options     var  Optional parameters field.  See the options
                    documents for a list of defined options.


   Message         Use
   -------         ---

   DHCPDISCOVER -  Client broadcast to locate available servers.

   DHCPOFFER    -  Server to client in response to DHCPDISCOVER with
                   offer of configuration parameters.

   DHCPREQUEST  -  Client message to servers either (a) requesting
                   offered parameters from one server and implicitly
                   declining offers from all others, (b) confirming
                   correctness of previously allocated address after,
                   e.g., system reboot, or (c) extending the lease on a
                   particular network address.

   DHCPACK      -  Server to client with configuration parameters,
                   including committed network address.

   DHCPNAK      -  Server to client indicating client's notion of network
                   address is incorrect (e.g., client has moved to new
                   subnet) or client's lease as expired

   DHCPDECLINE  -  Client to server indicating network address is already
                   in use.

   DHCPRELEASE  -  Client to server relinquishing network address and
                   cancelling remaining lease.

   DHCPINFORM   -  Client to server, asking only for local configuration
                   parameters; client already has externally configured
                   network address.


2.1 Configuration parameters repository

    The first service provided by DHCP is to provide persistent storage
    of network parameters for network clients.  The model of DHCP
    persistent storage is that the DHCP service stores a key-value entry
    for each client, where the key is some unique identifier (for
    example, an IP subnet number and a unique identifier within the
    subnet) and the value contains the configuration parameters for the
    client.

    For example, the key might be the pair (IP-subnet-number, hardware-
    address) (note that the "hardware-address" should be typed by the
    type of hardware to accommodate possible duplication of hardware
    addresses resulting from bit-ordering problems in a mixed-media,
    bridged network) allowing for serial or concurrent reuse of a
    hardware address on different subnets, and for hardware addresses
    that may not be globally unique.  Alternately, the key might be the
    pair (IP-subnet-number, hostname), allowing the server to assign
    parameters intelligently to a DHCP client that has been moved to a
    different subnet or has changed hardware addresses (perhaps because
    the network interface failed and was replaced). The protocol defines
    that the key will be (IP-subnet-number, hardware-address) unless the
    client explicitly supplies an identifier using the 'client
    identifier' option.           A client can query the DHCP service to
    retrieve its configuration parameters.  The client interface to the
    configuration parameters repository consists of protocol messages to
    request configuration parameters and responses from the server
    carrying the configuration parameters.

2.2 Dynamic allocation of network addresses

    The second service provided by DHCP is the allocation of temporary or
    permanent network (IP) addresses to clients.  The basic mechanism for
    the dynamic allocation of network addresses is simple: a client
    requests the use of an address for some period of time.  The
    allocation mechanism (the collection of DHCP servers) guarantees not
    to reallocate that address within the requested time and attempts to
    return the same network address each time the client requests an
    address.  In this document, the period over which a network address
    is allocated to a client is referred to as a "lease" [11].  The
    client may extend its lease with subsequent requests.  The client may
    issue a message to release the address back to the server when the
    client no longer needs the address.  The client may ask for a
    permanent assignment by asking for an infinite lease.  Even when
    assigning "permanent" addresses, a server may choose to give out
    lengthy but non-infinite leases to allow detection of the fact that
    the client has been retired.

    In some environments it will be necessary to reassign network
    addresses due to exhaustion of available addresses.  In such
    environments, the allocation mechanism will reuse addresses whose
    lease has expired.  The server should use whatever information is
    available in the configuration information repository to choose an
    address to reuse.  For example, the server may choose the least
    recently assigned address.  As a consistency check, the allocating
    server SHOULD probe the reused address before allocating the address,
    e.g., with an ICMP echo request, and the client SHOULD probe the
    newly received address, e.g., with ARP.

    The first four octets of the 'options' field of the DHCP message
    contain the (decimal) values 99, 130, 83 and 99, respectively (this
    is the same magic cookie as is defined in RFC 1497 [17]).

3.1 Client-server interaction - allocating a network address

       1. The client broadcasts a DHCPDISCOVER message on its local physical
          subnet.  The DHCPDISCOVER message MAY include options that suggest
          values for the network address and lease duration.

       2. Each server may respond with a DHCPOFFER message that includes an
          available network address in the 'yiaddr' field (and other
          configuration parameters in DHCP options). The server transmits the
          DHCPOFFER message to the client.

      3. The client receives one or more DHCPOFFER messages from one or more
         servers and chooses one offer. The client broadcasts a DHCPREQUEST message
         that MUST include the 'server identifier' option to indicate which server
         it has selected. The 'requested IP address' option MUST be set to the
         value of 'yiaddr' in the DHCPOFFER message from the server. This DHCPREQUEST
         message is broadcast. The DHCPREQUEST message MUST use the same value
         in the DHCP message header's 'secs' field and be sent to the same IP
         broadcast address as the original DHCPDISCOVER message.

      4. The servers receive the DHCPREQUEST broadcast from the client.
         The server selected in the DHCPREQUEST message responds with a
         DHCPACK message containing the configuration parameters for the
         requesting client.  The combination of 'client identifier' or
         'chaddr' and assigned network address constitute a unique
         identifier for the client's lease and are used by both the client
         and server to identify a lease referred to in any DHCP messages.
         Any configuration parameters in the DHCPACK message SHOULD NOT
         conflict with those in the earlier DHCPOFFER message to which the
         client is responding. The 'yiaddr' field in the DHCPACK
         messages is filled in with the selected network address.

         If the selected server is unable to satisfy the DHCPREQUEST message
         (e.g., the requested network address has been allocated), the
         server SHOULD respond with a DHCPNAK message.

      5. The client receives the DHCPACK message with configuration
         parameters.  The client SHOULD perform a final check on the
         parameters (e.g., ARP for allocated network address), and notes the
         duration of the lease specified in the DHCPACK message. If the
         client detects that the address is already in use (e.g., through
         the use of ARP), the client MUST send a DHCPDECLINE message to the
         server and restarts the configuration process. If the client receives
         a DHCPNAK message, the client restarts the configuration process.

      6. The client may choose to relinquish its lease on a network address
         by sending a DHCPRELEASE message to the server.  The client
         identifies the lease to be released with its 'client identifier',
         or 'chaddr' and network address in the DHCPRELEASE message. If the
         client used a 'client identifier' when it obtained the lease, it
         MUST use the same 'client identifier' in the DHCPRELEASE message.

3.2 Client-server interaction - reusing a previously allocated network
    address

    If a client remembers and wishes to reuse a previously allocated
    network address, a client may choose to omit some of the steps
    described in the previous section.  The timeline diagram in figure 4
    shows the timing relationships in a typical client-server interaction
    for a client reusing a previously allocated network address.


   1. The client broadcasts a DHCPREQUEST message on its local subnet.
      The message includes the client's network address in the
      'requested IP address' option. As the client has not received its
      network address, it MUST NOT fill in the 'ciaddr' field. BOOTP
      relay agents pass the message on to DHCP servers not on the same
      subnet.  If the client used a 'client identifier' to obtain its
      address, the client MUST use the same 'client identifier' in the
      DHCPREQUEST message.

   2. Servers with knowledge of the client's configuration parameters
      respond with a DHCPACK message to the client.  Servers SHOULD NOT
      check that the client's network address is already in use; the
      client may respond to ICMP Echo Request messages at this point.
      If the client's request is invalid (e.g., the client has moved
      to a new subnet), servers SHOULD respond with a DHCPNAK message to
      the client. Servers SHOULD NOT respond if their information is not
      guaranteed to be accurate.  For example, a server that identifies a
      request for an expired binding that is owned by another server SHOULD
      NOT respond with a DHCPNAK unless the servers are using an explicit
      mechanism to maintain coherency among the servers.

      If 'giaddr' is 0x0 in the DHCPREQUEST message, the client is on
      the same subnet as the server.  The server MUST
      broadcast the DHCPNAK message to the 0xffffffff broadcast address
      because the client may not have a correct network address or subnet
      mask, and the client may not be answering ARP requests.
      Otherwise, the server MUST send the DHCPNAK message to the IP
      address of the BOOTP relay agent, as recorded in 'giaddr'.  The
      relay agent will, in turn, forward the message directly to the
      client's hardware address, so that the DHCPNAK can be delivered even
      if the client has moved to a new network.

     3. The client receives the DHCPACK message with configuration
          parameters.  The client performs a final check on the parameters
          (as in section 3.1), and notes the duration of the lease specified
          in the DHCPACK message.  The specific lease is implicitly identified
          by the 'client identifier' or 'chaddr' and the network address.  At
          this point, the client is configured.

          If the client detects that the IP address in the DHCPACK message
          is already in use, the client MUST send a DHCPDECLINE message to the
          server and restarts the configuration process by requesting a
          new network address.  This action corresponds to the client
          moving to the INIT state in the DHCP state diagram, which is
          described in section 4.4.

          If the client receives a DHCPNAK message, it cannot reuse its
          remembered network address.  It must instead request a new
          address by restarting the configuration process, this time
          using the (non-abbreviated) procedure described in section
          3.1.  This action also corresponds to the client moving to
          the INIT state in the DHCP state diagram.

          The client times out and retransmits the DHCPREQUEST message if
          the client receives neither a DHCPACK nor a DHCPNAK message.  The
          client retransmits the DHCPREQUEST according to the retransmission
          algorithm in section 4.1.  The client should choose to retransmit
          the DHCPREQUEST enough times to give adequate probability of
          contacting the server without causing the client (and the user of
          that client) to wait overly long before giving up; e.g., a client
          retransmitting as described in section 4.1 might retransmit the


          DHCPREQUEST message four times, for a total delay of 60 seconds,
          before restarting the initialization procedure.  If the client
          receives neither a DHCPACK or a DHCPNAK message after employing
          the retransmission algorithm, the client MAY choose to use the
          previously allocated network address and configuration parameters
          for the remainder of the unexpired lease.  This corresponds to
          moving to BOUND state in the client state transition diagram shown
          in figure 5.

       4. The client may choose to relinquish its lease on a network
          address by sending a DHCPRELEASE message to the server.  The
          client identifies the lease to be released with its
          'client identifier', or 'chaddr' and network address in the
          DHCPRELEASE message.

          Note that in this case, where the client retains its network
          address locally, the client will not normally relinquish its
          lease during a graceful shutdown.  Only in the case where the
          client explicitly needs to relinquish its lease, e.g., the client
          is about to be moved to a different subnet, will the client send
          a DHCPRELEASE message.

3.3 Interpretation and representation of time values

    A client acquires a lease for a network address for a fixed period of
    time (which may be infinite).  Throughout the protocol, times are to
    be represented in units of seconds.  The time value of 0xffffffff is
    reserved to represent "infinity".

4.1 Constructing and sending DHCP messages

   DHCP clients and servers both construct DHCP messages by filling in
   fields in the fixed format section of the message and appending
   tagged data items in the variable length option area.  The options
   area includes first a four-octet 'magic cookie' (which was described
   in section 3), followed by the options.  The last option must always
   be the 'end' option.

   DHCP server port: 67,
   DHCP client port: 68,

   The 'server identifier' field is used both to identify a DHCP server
   in a DHCP message and as a destination address from clients to
   servers. DHCP clients MUST use the IP address provided in the 'server
   identifier' option for any unicast requests to the DHCP server.

   DHCP messages broadcast by a client prior to that client obtaining
   its IP address must have the source address field in the IP header
   set to 0.

   If the 'giaddr' field in a DHCP message from a client is non-zero,
   the server sends any return messages to the 'DHCP server' port on the
   BOOTP relay agent whose address appears in 'giaddr'. If the 'giaddr'
   field is zero and the 'ciaddr' field is nonzero, then the server
   unicasts DHCPOFFER and DHCPACK messages to the address in 'ciaddr'.
   If 'giaddr' is zero and 'ciaddr' is zero, and the broadcast bit is
   set, then the server broadcasts DHCPOFFER and DHCPACK messages to
   0xffffffff. If the broadcast bit is not set and 'giaddr' is zero and
   'ciaddr' is zero, then the server unicasts DHCPOFFER and DHCPACK
   messages to the client's hardware address and 'yiaddr' address.  In
   all cases, when 'giaddr' is zero, the server broadcasts any DHCPNAK
   messages to 0xffffffff.

   If the options in a DHCP message extend into the 'sname' and 'file'
   fields, the 'option overload' option MUST appear in the 'options'
   field, with value 1, 2 or 3, as specified in RFC 1533.  If the 'option
   overload' option is present in the 'options' field, the
   options in the 'options' field MUST be terminated by an 'end' option,
   and MAY contain one or more 'pad' options to fill the options field.
   The options in the 'sname' and 'file' fields (if in use as indicated
   by the 'options overload' option) MUST begin with the first octet of
   the field, MUST be terminated by an 'end' option, and MUST be
   followed by 'pad' options to fill the remainder of the field.  Any
   individual option in the 'options', 'sname' and 'file' fields MUST be
   entirely contained in that field.  The options in the 'options' field
   MUST be interpreted first, so that any 'option overload' options may
   be interpreted.  The 'file' field MUST be interpreted next (if the
   'option overload' option indicates that the 'file' field contains
   DHCP options), followed by the 'sname' field.

   The values to be passed in an 'option' tag may be too long to fit in
   the 255 octets available to a single option (e.g., a list of routers
   in a 'router' option [21]).  Options may appear only once, unless
   otherwise specified in the options document.  The client concatenates
   the values of multiple instances of the same option into a single
   parameter list for configuration.

   The 'xid' field is used by the client to match incoming DHCP messages
   with pending requests.  A DHCP client MUST choose 'xid's in such a
   way as to minimize the chance of using an 'xid' identical to one used
   by another client. For example, a client may choose a different,
   random initial 'xid' each time the client is rebooted, and
   subsequently use sequential 'xid's until the next reboot.  Selecting
   a new 'xid' for each retransmission is an implementation decision.  A
   client may choose to reuse the same 'xid' or select a new 'xid' for
   each retransmitted message.

   Normally, DHCP servers and BOOTP relay agents attempt to deliver
   DHCPOFFER, DHCPACK and DHCPNAK messages directly to the client using
   uicast delivery.  The IP destination address (in the IP header) is
   set to the DHCP 'yiaddr' address and the link-layer destination
   address is set to the DHCP 'chaddr' address.  Unfortunately, some
   client implementations are unable to receive such unicast IP
   datagrams until the implementation has been configured with a valid
   IP address (leading to a deadlock in which the client's IP address
   cannot be delivered until the client has been configured with an IP
   address).

   A server or relay agent sending or relaying a DHCP message directly
   to a DHCP client (i.e., not to a relay agent specified in the
   'giaddr' field) SHOULD examine the BROADCAST bit in the 'flags'
   field.  If this bit is set to 1, the DHCP message SHOULD be sent as
   an IP broadcast using an IP broadcast address (preferably 0xffffffff)
   as the IP destination address and the link-layer broadcast address as
   the link-layer destination address.  If the BROADCAST bit is cleared
   to 0, the message SHOULD be sent as an IP unicast to the IP address
   specified in the 'yiaddr' field and the link-layer address specified
   in the 'chaddr' field.  If unicasting is not possible, the message
   MAY be sent as an IP broadcast using an IP broadcast address
   (preferably 0xffffffff) as the IP destination address and the link-
   layer broadcast address as the link-layer destination address.


4.3 DHCP server behavior

   A DHCP server processes incoming DHCP messages from a client based on
   the current state of the binding for that client.  A DHCP server can
   receive the following messages from a client:

      o DHCPDISCOVER
      o DHCPREQUEST
      o DHCPDECLINE
      o DHCPRELEASE
      o DHCPINFORM

   Table 3 gives the use of the fields and options in a DHCP message by
   a server.  The remainder of this section describes the action of the
   DHCP server for each possible incoming message.
